[{"C:\\Users\\shatanshu agarwal\\Desktop\\Insta\\Server\\front\\src\\index.js":"1","C:\\Users\\shatanshu agarwal\\Desktop\\Insta\\Server\\front\\src\\reportWebVitals.js":"2","C:\\Users\\shatanshu agarwal\\Desktop\\Insta\\Server\\front\\src\\App.js":"3","C:\\Users\\shatanshu agarwal\\Desktop\\Insta\\Server\\front\\src\\components\\screens\\Login.js":"4","C:\\Users\\shatanshu agarwal\\Desktop\\Insta\\Server\\front\\src\\components\\screens\\Profile.js":"5","C:\\Users\\shatanshu agarwal\\Desktop\\Insta\\Server\\front\\src\\components\\screens\\Signup.js":"6","C:\\Users\\shatanshu agarwal\\Desktop\\Insta\\Server\\front\\src\\components\\Navbar.js":"7","C:\\Users\\shatanshu agarwal\\Desktop\\Insta\\Server\\front\\src\\components\\screens\\UserProfile.js":"8","C:\\Users\\shatanshu agarwal\\Desktop\\Insta\\Server\\front\\src\\components\\screens\\SubscribeUserPost.js":"9","C:\\Users\\shatanshu agarwal\\Desktop\\Insta\\Server\\front\\src\\reducers\\userReducer.js":"10","C:\\Users\\shatanshu agarwal\\Desktop\\Insta\\Server\\front\\src\\components\\screens\\Home.js":"11","C:\\Users\\shatanshu agarwal\\Desktop\\Insta\\Server\\front\\src\\components\\screens\\CreatePost.js":"12","C:\\Users\\shatanshu agarwal\\Desktop\\Insta\\Server\\front\\src\\components\\screens\\Reset.js":"13","C:\\Users\\shatanshu agarwal\\Desktop\\Insta\\Server\\front\\src\\components\\screens\\Newpassword.js":"14"},{"size":500,"mtime":1610880828584,"results":"15","hashOfConfig":"16"},{"size":362,"mtime":1610880828584,"results":"17","hashOfConfig":"16"},{"size":2054,"mtime":1613161494997,"results":"18","hashOfConfig":"16"},{"size":3420,"mtime":1613162710026,"results":"19","hashOfConfig":"16"},{"size":3787,"mtime":1612882634494,"results":"20","hashOfConfig":"16"},{"size":2546,"mtime":1612877922353,"results":"21","hashOfConfig":"16"},{"size":2904,"mtime":1613199949399,"results":"22","hashOfConfig":"16"},{"size":5013,"mtime":1612534454294,"results":"23","hashOfConfig":"16"},{"size":5440,"mtime":1612530718380,"results":"24","hashOfConfig":"16"},{"size":540,"mtime":1612879140449,"results":"25","hashOfConfig":"16"},{"size":5453,"mtime":1613157298196,"results":"26","hashOfConfig":"16"},{"size":2624,"mtime":1611651731616,"results":"27","hashOfConfig":"16"},{"size":1754,"mtime":1613160486484,"results":"28","hashOfConfig":"16"},{"size":1621,"mtime":1613161646189,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1nits9e",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"32"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"32"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"32"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"32"},"C:\\Users\\shatanshu agarwal\\Desktop\\Insta\\Server\\front\\src\\index.js",[],["70","71"],"C:\\Users\\shatanshu agarwal\\Desktop\\Insta\\Server\\front\\src\\reportWebVitals.js",[],"C:\\Users\\shatanshu agarwal\\Desktop\\Insta\\Server\\front\\src\\App.js",["72","73"],"import React,{useEffect,createContext,useReducer,useContext} from 'react';\nimport Navbar from './components/Navbar'\nimport \"./App.css\"\nimport {BrowserRouter,Route,Switch,useHistory} from 'react-router-dom'\nimport Home from './components/screens/Home'\nimport Signin from './components/screens/Login'\nimport Profile from './components/screens/Profile'\nimport Signup from './components/screens/Signup'\nimport CreatePost from './components/screens/CreatePost'\nimport {reducer,initialState} from './reducers/userReducer'\nimport UserProfile from './components/screens/UserProfile' \nimport SubscribedUser from './components/screens/SubscribeUserPost'\nimport Reset from './components/screens/Reset'\nimport NewPassword from './components/screens/Newpassword'\n\n export const Usercontext = createContext()\n\nconst Routing = ()=>{\n  const history = useHistory()\n  const {state,dispatch} = useContext(Usercontext)\n  useEffect(()=>{\n    const user = JSON.parse(localStorage.getItem(\"user\"))\n\n    if(user){\n      dispatch({type:\"USER\",payload:user})\n      \n    }else{\n      if(!history.location.pathname.startsWith('/reset'))\n             history.push('/signin')\n    }\n\n\n  },[])\n  return(\n    <Switch>\n    <Route exact path=\"/\">\n           <Home/>\n    </Route>\n    <Route path=\"/signin\">\n      <Signin/>\n    </Route>\n    <Route path=\"/signup\">\n      <Signup/>\n    </Route>\n    <Route exact path=\"/profile\">\n      <Profile/>\n    </Route>\n    <Route path=\"/create\">\n      <CreatePost/>\n    </Route>\n    <Route path=\"/profile/:userid\">\n      <UserProfile/>\n    </Route>\n    <Route path=\"/myfollowingpost\">\n      <SubscribedUser/>\n    </Route>\n    <Route exact path=\"/reset\">\n      <Reset/>\n    </Route>\n    <Route path=\"/reset/:token\">\n      <NewPassword/>\n    </Route>\n    \n    </Switch>\n    \n\n  )\n}\n\nfunction App() {\n  const [state,dispatch] = useReducer(reducer,initialState)\n  return (\n    <Usercontext.Provider value={{state,dispatch}}>\n    <BrowserRouter>\n    <Navbar/>\n    <Routing/>\n    \n    </BrowserRouter>\n    </Usercontext.Provider>\n  );\n}\n\nexport default App;\n","C:\\Users\\shatanshu agarwal\\Desktop\\Insta\\Server\\front\\src\\components\\screens\\Login.js",["74","75","76","77","78"],"import React,{useState,useContext,useEffect} from  'react'\r\nimport {Link,useHistory} from 'react-router-dom'\r\nimport{Usercontext} from '../../App'\r\nimport M from 'materialize-css'\r\n\r\n\r\n\r\nconst Signin = ()=>{\r\n    const {state,dispatch} = useContext(Usercontext)\r\n    const history = useHistory()\r\n    \r\n    const [password,setPassword] = useState(\"\")\r\n    const [email,setEmail] = useState(\"\")\r\n    const [image,setImage] = useState(\"\")\r\n    const [url,setUrl] = useState(undefined)\r\n    useEffect(()=>{\r\n        if(url){\r\n            uploadFields()\r\n        }\r\n\r\n    },[url])\r\n\r\n    const uploadPic = ()=>{\r\n        const data = new FormData()\r\n    data.append(\"file\",image)\r\n    data.append(\"upload_preset\",\"insta112\")\r\n    data.append(\"cloud_name\",\"bazz001\")\r\n    fetch(\"https://api.cloudinary.com/v1_1/bazz001/image/upload\",{\r\n      method:\"post\",\r\n      body:data\r\n    }).then(res=>res.json())\r\n    .then(data=>{\r\n      setUrl(data.url)\r\n        })\r\n    .catch(err=>{\r\n      console.log(err)\r\n    })\r\n\r\n    }\r\n    const uploadFields = ()=>{\r\n        if(!/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email)){\r\n            M.toast({html: \"invalid email\",classes:\"#c62828 red darken-3\"})\r\n            return\r\n        }\r\n       fetch(\"/signin\",{\r\n           method:\"post\",\r\n           headers:{\r\n               \"Content-Type\":\"application/json\"\r\n           },\r\n           body:JSON.stringify({\r\n               \r\n               password,\r\n               email\r\n           })\r\n       }).then(res=>res.json())\r\n       .then(data=>{\r\n           console.log(data)\r\n           if(data.error){\r\n               M.toast({html: data.error,classes:\"#c62828 red darken-3\"})\r\n           }\r\n           else{\r\n               localStorage.setItem(\"jwt\",data.token)\r\n               localStorage.setItem(\"user\",JSON.stringify(data.user))\r\n               dispatch({type:\"USER\",payload:data.user})\r\n               M.toast({html:\"signed in successfully\",classes:\"#43a047 green darken-1\"})\r\n               history.push('/')\r\n           }\r\n       }).catch(err=>{\r\n           console.log(err)\r\n       })\r\n\r\n    }\r\n    const PostData = ()=>{\r\n        if(image){\r\n            uploadPic()\r\n        }else{\r\n            uploadFields()\r\n\r\n        }\r\n        \r\n        \r\n    }\r\n    return(\r\n        <div className=\"mycard\">\r\n            <div className=\"card auth-card input-field\">\r\n            <h2>Instagram</h2>\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"email\"\r\n                value={email}\r\n                onChange={(e)=>setEmail(e.target.value)}\r\n            />\r\n            <input\r\n                type=\"password\"\r\n                placeholder=\"password\"\r\n                value={password}\r\n                onChange={(e)=>setPassword(e.target.value)}\r\n            />\r\n            \r\n            \r\n              <button className=\"btn waves-effect waves-light #64b5f6 blue darken-1\"\r\n              onClick={()=>PostData()}\r\n              >\r\n                    Login\r\n              </button>\r\n              <h6>\r\n                  <Link to=\"/signup\">Don't have an account ?</Link>\r\n              </h6>\r\n              <h7>\r\n                  <Link to=\"/reset\">Forgot Password ?</Link>\r\n              </h7>\r\n\r\n\r\n\r\n            \r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Signin","C:\\Users\\shatanshu agarwal\\Desktop\\Insta\\Server\\front\\src\\components\\screens\\Profile.js",["79","80"],"import React,{useEffect,useState,useContext} from  'react'\r\nimport {Usercontext} from '../../App'\r\n\r\n\r\nconst Profile = ()=>{\r\n    const [mypics,setPics] = useState([])\r\n    const {state,dispatch} = useContext(Usercontext)\r\n    const [image,setImage] = useState(\"\")\r\n    \r\n    \r\n    useEffect(()=>{\r\n        fetch('/mypost',{\r\n            headers:{\r\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n            }\r\n        }).then(res=>res.json())\r\n        .then(result=>{\r\n            console.log(result)\r\n            setPics(result.mypost)\r\n        })\r\n\r\n    },[])\r\n    useEffect(()=>{\r\n        if(image){\r\n            const data = new FormData()\r\n    data.append(\"file\",image)\r\n    data.append(\"upload_preset\",\"insta112\")\r\n    data.append(\"cloud_name\",\"bazz001\")\r\n    fetch(\"https://api.cloudinary.com/v1_1/bazz001/image/upload\",{\r\n      method:\"post\",\r\n      body:data\r\n    }).then(res=>res.json())\r\n    .then(data=>{\r\n      \r\n      \r\n   //   localStorage.setItem(\"user\",JSON.stringify({...state,pic:data.url}))\r\n    //  dispatch({type:\"UPDATEPIC\",payload:data.url})\r\n      fetch('/updatepic',{\r\n          method:\"put\",\r\n          headers:{\r\n              \"Content-Type\":\"application/json\",\r\n              \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n          },\r\n          body:JSON.stringify({\r\n              pic:data.url\r\n          })\r\n      }).then(res=>res.json())\r\n      .then(result=>{\r\n          console.log(result)\r\n          localStorage.setItem(\"user\",JSON.stringify({...state,pic:result.pic}))\r\n          dispatch({type:\"UPDATEPIC\",payload:result.pic})\r\n        //  window.location.reload()\r\n      })\r\n    //  \r\n        })\r\n    .catch(err=>{\r\n      console.log(err)\r\n    })\r\n        }\r\n\r\n    },[image])\r\n    const updatePhoto = (file)=>{\r\n        setImage(file)\r\n        \r\n    }\r\n    return(\r\n        <div style={{maxWidth:\"550px\",margin:\"0px auto\"}}>\r\n        <div style={{\r\n                margin:\"18px 0px\",\r\n                borderBottom:\"1px solid grey\"\r\n            }}>\r\n\r\n        \r\n            <div style={{\r\n                display:\"flex\",\r\n                justifyContent:\"space-around\",\r\n                \r\n            }}>\r\n                <div>\r\n                    <img style={{width:\"160px\",height:\"160px\",borderRadius:\"80px\"}}  \r\n                        src={state?state.pic:\"loading\"}\r\n\r\n                    />\r\n                    \r\n                </div>\r\n                <div>\r\n                    <h4>{state?state.name:\"loading\"} </h4>\r\n                    <h5>{state?state.email:\"loading\"} </h5>\r\n                    <div style={{display:\"flex\",justifyContent:\"space-between\",width:\"108%\"}}>\r\n                    <h6>{mypics.length} posts</h6>\r\n                       <h6>{state?state.followers.length:\"fetching\"} followers</h6>\r\n                       <h6>{state?state.following.length:\"0\"} following</h6>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \r\n              <div className=\"file-field input-field\" style={{margin:\"10px\"}}>\r\n            <div className=\"btn #64b5f6 blue darken-1\">\r\n            <span>Upload Picture</span>\r\n            <input type=\"file\" onChange={(e)=>updatePhoto(e.target.files[0])} />\r\n            </div>\r\n            <div className=\"file-path-wrapper\">\r\n            <input className=\"file-path validate\" type=\"text\"/>\r\n            </div>\r\n            </div>\r\n            \r\n              </div>\r\n        <div className=\"gallery\">\r\n        {\r\n            mypics.map(item=>{\r\n                return (\r\n                    <img key={item._id} className=\"item\" src={item.photo} alt={item.title} />\r\n                )\r\n            })\r\n        }\r\n        \r\n        \r\n\r\n\r\n        </div>\r\n        \r\n        \r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Profile","C:\\Users\\shatanshu agarwal\\Desktop\\Insta\\Server\\front\\src\\components\\screens\\Signup.js",["81","82","83","84","85"],"import React,{useState} from  'react'\r\nimport {Link,useHistory} from 'react-router-dom'\r\nimport M from 'materialize-css'\r\n\r\nconst Signin = ()=>{\r\n    const history = useHistory()\r\n    const [name,setName] = useState(\"\")\r\n    const [password,setPassword] = useState(\"\")\r\n    const [email,setEmail] = useState(\"\")\r\n    const [image,setImage] = useState(\"\")\r\n    const [url,setUrl] = useState(undefined)\r\n\r\n\r\n    const PostData = ()=>{\r\n        if(!/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email)){\r\n             M.toast({html: \"invalid email\",classes:\"#c62828 red darken-3\"})\r\n             return\r\n         }\r\n        fetch(\"/signup\",{\r\n            method:\"post\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\"\r\n            },\r\n            body:JSON.stringify({\r\n                name,\r\n                password,\r\n                email,\r\n                pic:url\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(data=>{\r\n            if(data.error){\r\n                M.toast({html: data.error,classes:\"#c62828 red darken-3\"})\r\n            }\r\n            else{\r\n                M.toast({html:data.message,classes:\"#43a047 green darken-1\"})\r\n                history.push('/signin')\r\n            }\r\n        }).catch(err=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n    \r\n    return(\r\n        <div className=\"mycard\">\r\n            <div className=\"card auth-card input-field\">\r\n            <h2>Instagram</h2>\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"name\"\r\n                value={name}\r\n                onChange={(e)=>setName(e.target.value)}\r\n            />\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"email\"\r\n                value={email}\r\n                onChange={(e)=>setEmail(e.target.value)}\r\n            />\r\n            <input\r\n                type=\"password\"\r\n                placeholder=\"password\"\r\n                value={password}\r\n                onChange={(e)=>setPassword(e.target.value)}\r\n            />\r\n              <button className=\"btn waves-effect waves-light #64b5f6 blue darken-1\"\r\n              onClick={()=>PostData()}\r\n              >\r\n                    Signup\r\n              </button>\r\n              <h6>\r\n                  <Link to=\"/signin\">Already have an account ?</Link>\r\n              </h6>\r\n\r\n            \r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Signin","C:\\Users\\shatanshu agarwal\\Desktop\\Insta\\Server\\front\\src\\components\\Navbar.js",[],"C:\\Users\\shatanshu agarwal\\Desktop\\Insta\\Server\\front\\src\\components\\screens\\UserProfile.js",["86","87","88"],"import React,{useEffect,useState,useContext} from  'react'\r\nimport {Usercontext} from '../../App'\r\nimport {useParams} from 'react-router-dom'\r\n\r\nconst Profile = ()=>{\r\n    const [UserProfile,setProfile] = useState(null)\r\n    \r\n    const {state,dispatch} = useContext(Usercontext)\r\n    const {userid} = useParams()\r\n    const [showFollow,setShowFollow] = useState(state?!state.following.includes(userid):true)\r\n    useEffect(()=>{\r\n        fetch(`/user/${userid}`,{\r\n            headers:{\r\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n            }\r\n        }).then(res=>res.json())\r\n        .then(result=>{\r\n            //console.log(result)\r\n            \r\n            setProfile(result)\r\n        })\r\n\r\n    },[])\r\n    \r\n    const followUser = ()=>{\r\n        fetch('/follow',{\r\n            method:\"put\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\",\r\n                \"Authorization\":\"Bearer \"+localStorage.getItem('jwt')\r\n            },\r\n            body:JSON.stringify({\r\n                followId:userid\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(data=>{\r\n            //console.log(data)\r\n            dispatch({type:\"UPDATE\",payload:{following:data.following,followers:data.followers}})\r\n            localStorage.setItem(\"User\",JSON.stringify(data))\r\n            setProfile((prevState)=>{\r\n                return{\r\n                    ...prevState,\r\n                    user:{\r\n                        ...prevState.user,\r\n                        followers:[...prevState.user.followers,data._id]\r\n                    }\r\n                }\r\n            })\r\n            setShowFollow(false)\r\n\r\n        })\r\n    }\r\n    const unfollowUser = ()=>{\r\n        fetch('/unfollow',{\r\n            method:\"put\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\",\r\n                \"Authorization\":\"Bearer \"+localStorage.getItem('jwt')\r\n            },\r\n            body:JSON.stringify({\r\n                unfollowId:userid\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(data=>{\r\n            //console.log(data)\r\n            dispatch({type:\"UPDATE\",payload:{following:data.following,followers:data.followers}})\r\n            localStorage.setItem(\"User\",JSON.stringify(data))\r\n            \r\n            setProfile((prevState)=>{\r\n                const newFollower = prevState.user.followers.filter(item=>item != data._id)\r\n                return{\r\n                    ...prevState,\r\n                    user:{\r\n                        ...prevState.user,\r\n                        followers:newFollower\r\n                    }\r\n                }\r\n            })\r\n            setShowFollow(true)\r\n        })\r\n    }\r\n\r\n    \r\n    \r\n    \r\n    return(\r\n        <>\r\n        {UserProfile ? \r\n            <div style={{maxWidth:\"550px\",margin:\"0px auto\"}}>\r\n            <div style={{\r\n                display:\"flex\",\r\n                justifyContent:\"space-around\",\r\n                margin:\"18px 0px\",\r\n                borderBottom:\"1px solid grey\"\r\n            }}>\r\n                <div>\r\n                    <img style={{width:\"160px\",height:\"160px\",borderRadius:\"80px\"}}  \r\n                        src={UserProfile.user.pic}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <h4>{UserProfile.user.name} </h4>\r\n                    <h5>{UserProfile.user.email} </h5>\r\n                    <div style={{display:\"flex\",justifyContent:\"space-between\",width:\"108%\"}}>\r\n                        <h6>{UserProfile.posts.length} posts</h6>\r\n                        <h6>{UserProfile.user.followers.length} followers</h6>\r\n                        <h6>{UserProfile.user.following.length} following</h6>\r\n                    </div>\r\n                    {showFollow?\r\n                        <button style={{\r\n                            margin:\"10px\"\r\n                        }} className=\"btn waves-effect waves-light #64b5f6 blue darken-1\"\r\n                              onClick={()=>followUser()}\r\n                                              >Follow\r\n                        </button>\r\n                    :\r\n                    <button \r\n                     style={{\r\n                         margin:\"10px\"\r\n                     }}\r\n                     className=\"btn waves-effect waves-light #64b5f6 blue darken-1\"\r\n                         onClick={()=>unfollowUser()}\r\n                            >\r\n                             UnFollow\r\n                         </button>\r\n                    }\r\n                    \r\n                </div>\r\n            </div>\r\n        <div className=\"gallery\">\r\n        {\r\n            UserProfile.posts.map(item=>{\r\n                return (\r\n                    <img key={item._id} className=\"item\" src={item.photo} alt={item.title} />\r\n                )\r\n            })\r\n        }\r\n        \r\n        \r\n\r\n\r\n        </div>\r\n        \r\n        \r\n        </div>\r\n        : <h2>loading ...!</h2>}\r\n        \r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default Profile","C:\\Users\\shatanshu agarwal\\Desktop\\Insta\\Server\\front\\src\\components\\screens\\SubscribeUserPost.js",["89","90","91","92","93","94"],"import React,{useState,useEffect,useContext} from  'react'\r\nimport {Usercontext} from '../../App'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst Home = ()=>{\r\n    const [data,setData] = useState([])\r\n    const {state,dispatch} = useContext(Usercontext)\r\n    useEffect (()=>{\r\n        fetch('/getsubpost',{\r\n            headers:{\r\n                \"Authorization\":\"Bearer \"+localStorage.getItem('jwt')\r\n            }\r\n        }).then(res=>res.json())\r\n        .then(result=>{\r\n            console.log(result)\r\n            setData(result.posts)\r\n        })\r\n    },[])\r\n    const likePost =(id)=>{\r\n        fetch('/like',{\r\n            method:\"put\" ,\r\n            headers:{\r\n                \"Content-Type\":\"application/json\",\r\n                \"Authorization\":\"Bearer \" +localStorage.getItem(\"jwt\")\r\n            },\r\n            body:JSON.stringify({\r\n                postId:id\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(result=>{\r\n            console.log(result)\r\n            const newData = data.map(item=>{\r\n                if(item._id==result._id){\r\n                    return result\r\n                }else{\r\n                    return item\r\n                }\r\n            })\r\n            setData(newData)\r\n        }).catch(err=>{\r\n            console.log(err)\r\n        })\r\n\r\n    }\r\n    const unlikePost =(id)=>{\r\n        fetch('/unlike',{\r\n            method:\"put\" ,\r\n            headers:{\r\n                \"Content-Type\":\"application/json\",\r\n                \"Authorization\":\"Bearer \" +localStorage.getItem(\"jwt\")\r\n            },\r\n            body:JSON.stringify({\r\n                postId:id\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(result=>{\r\n            const newData = data.map(item=>{\r\n                if(item._id==result._id){\r\n                    return result\r\n                }else{\r\n                    return item\r\n                }\r\n            })\r\n            setData(newData)\r\n        }).catch(err=>{\r\n            console.log(err)\r\n        })\r\n\r\n    }\r\n    const makeComment = (text,postId)=>{\r\n        fetch('/comment',{\r\n            method:\"put\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\",\r\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n            },\r\n            body:JSON.stringify({\r\n                postId,\r\n                text\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(result=>{\r\n            console.log(result)\r\n            const newData = data.map(item=>{\r\n              if(item._id==result._id){\r\n                  return result\r\n              }else{\r\n                  return item\r\n              }\r\n           })\r\n          setData(newData)\r\n        }).catch(err=>{\r\n            console.log(err)\r\n        })\r\n  }\r\n\r\n\r\n  const deletePost = (postid)=>{\r\n    fetch(`/deletepost/${postid}`,{\r\n        method:\"delete\",\r\n        headers:{\r\n            Authorization:\"Bearer \"+localStorage.getItem(\"jwt\")\r\n        }\r\n    }).then(res=>res.json())\r\n    .then(result=>{\r\n        console.log(result)\r\n        const newData = data.filter(item=>{\r\n            return item._id !== result._id\r\n        })\r\n        setData(newData)\r\n    })\r\n}\r\n\r\n    return(\r\n        <div className=\"home\">\r\n        {\r\n            data.map(item=>{\r\n                return(\r\n                    <div className=\"card home-card\" key={item._id}>\r\n                <h5 style={{padding:\"8px\"}}><Link to={item.postedBy._id !== state._id ?\"/profile/\"+item.postedBy._id : \"/profile\"}>{item.postedBy.name}</Link> {item.postedBy._id == state._id\r\n                && <i className=\"material-icons\" style={{\r\n                    float:\"right\"\r\n                }} \r\n                onClick={()=>deletePost(item._id)}\r\n                >delete</i>\r\n                }\r\n                </h5>\r\n                <div className=\"card-image\">\r\n                    <img src={item.photo}   />\r\n                </div>\r\n                <div className=\"card-content\">\r\n                <i className=\"material-icons\" style={{color:\"red\"}}>favorite</i>\r\n                {item.likes.includes(state._id)\r\n                ? \r\n                <i className=\"material-icons\"\r\n                     onClick={()=>{unlikePost(item._id)}}\r\n\r\n                     >thumb_down </i>\r\n                :  \r\n                <i className=\"material-icons\"\r\n                onClick={()=>{likePost(item._id)}}\r\n                >thumb_up </i>\r\n                \r\n                }\r\n                <h6>{item.likes.length} likes</h6>\r\n                <h6>{item.title}</h6>\r\n                <p>{item.body}</p>\r\n                {\r\n                                    item.comments.map(record=>{\r\n                                        return(\r\n                                        <h6 key={record._id}><span style={{fontWeight:\"500\"}}>{record.postedBy.name}</span> {record.text}</h6>\r\n                                        )\r\n                                    })\r\n                                }\r\n                \r\n                <form onSubmit={(e)=>{\r\n                        e.preventDefault()\r\n                        makeComment(e.target[0].value,item._id)\r\n                    }} >\r\n                     <input type=\"text\" placeholder=\"add comment\" />\r\n                </form>\r\n                    \r\n                </div>\r\n            </div>\r\n            \r\n                )\r\n            })\r\n        }\r\n                  </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Home","C:\\Users\\shatanshu agarwal\\Desktop\\Insta\\Server\\front\\src\\reducers\\userReducer.js",["95","96","97"],"export const initialState = null\r\n\r\n\r\nexport const reducer = (state,action)=>{\r\n    if(action.type===\"USER\"){\r\n        return action.payload\r\n    }\r\n    if(action.type==\"CLEAR\"){\r\n        return null\r\n    }\r\n    if(action.type==\"UPDATE\"){\r\n        return{\r\n            ...state,\r\n            followers:action.payload.followers,\r\n            following:action.payload.following\r\n        }\r\n    }\r\n    if(action.type==\"UPDATEPIC\"){\r\n        return {\r\n            ...state,\r\n            pic:action.payload\r\n        }\r\n    }\r\n    return state\r\n}","C:\\Users\\shatanshu agarwal\\Desktop\\Insta\\Server\\front\\src\\components\\screens\\Home.js",["98","99","100","101","102","103"],"import React,{useState,useEffect,useContext} from  'react'\r\nimport {Usercontext} from '../../App'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst Home = ()=>{\r\n    const [data,setData] = useState([])\r\n    const {state,dispatch} = useContext(Usercontext)\r\n    useEffect (()=>{\r\n        fetch('/allpost',{\r\n            headers:{\r\n                \"Authorization\":\"Bearer \"+localStorage.getItem('jwt')\r\n            }\r\n        }).then(res=>res.json())\r\n        .then(result=>{\r\n            console.log(result)\r\n            setData(result.posts)\r\n        })\r\n    },[])\r\n    \r\n    const likePost =(id)=>{\r\n        fetch('/like',{\r\n            method:\"put\" ,\r\n            headers:{\r\n                \"Content-Type\":\"application/json\",\r\n                \"Authorization\":\"Bearer \" +localStorage.getItem(\"jwt\")\r\n            },\r\n            body:JSON.stringify({\r\n                postId:id\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(result=>{\r\n            console.log(result)\r\n            const newData = data.map(item=>{\r\n                if(item._id==result._id){\r\n                    return result\r\n                }else{\r\n                    return item\r\n                }\r\n            })\r\n            setData(newData)\r\n        }).catch(err=>{\r\n            console.log(err)\r\n        })\r\n\r\n    }\r\n    const unlikePost =(id)=>{\r\n        fetch('/unlike',{\r\n            method:\"put\" ,\r\n            headers:{\r\n                \"Content-Type\":\"application/json\",\r\n                \"Authorization\":\"Bearer \" +localStorage.getItem(\"jwt\")\r\n            },\r\n            body:JSON.stringify({\r\n                postId:id\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(result=>{\r\n            const newData = data.map(item=>{\r\n                if(item._id==result._id){\r\n                    return result\r\n                }else{\r\n                    return item\r\n                }\r\n            })\r\n            setData(newData)\r\n        }).catch(err=>{\r\n            console.log(err)\r\n        })\r\n\r\n    }\r\n    const makeComment = (text,postId)=>{\r\n        fetch('/comment',{\r\n            method:\"put\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\",\r\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n            },\r\n            body:JSON.stringify({\r\n                postId,\r\n                text\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(result=>{\r\n            console.log(result)\r\n            const newData = data.map(item=>{\r\n              if(item._id==result._id){\r\n                  return result\r\n              }else{\r\n                  return item\r\n              }\r\n           })\r\n          setData(newData)\r\n        }).catch(err=>{\r\n            console.log(err)\r\n        })\r\n        \r\n  }\r\n\r\n\r\n  const deletePost = (postid)=>{\r\n    fetch(`/deletepost/${postid}`,{\r\n        method:\"delete\",\r\n        headers:{\r\n            Authorization:\"Bearer \"+localStorage.getItem(\"jwt\")\r\n        }\r\n    }).then(res=>res.json())\r\n    .then(result=>{\r\n        console.log(result)\r\n        const newData = data.filter(item=>{\r\n            return item._id !== result._id\r\n        })\r\n        setData(newData)\r\n    })\r\n}\r\n\r\n    return(\r\n        <div className=\"home\">\r\n        {\r\n            data.map(item=>{\r\n                return(\r\n                    <div className=\"card home-card\" key={item._id}>\r\n                <h5 style={{padding:\"8px\"}}><Link to={item.postedBy._id !== state._id ?\"/profile/\"+item.postedBy._id : \"/profile\"}>{item.postedBy.name}</Link> {item.postedBy._id == state._id\r\n                && <i className=\"material-icons\" style={{\r\n                    float:\"right\"\r\n                }} \r\n                onClick={()=>deletePost(item._id)}\r\n                >delete</i>\r\n                }\r\n                </h5>\r\n                <div className=\"card-image\">\r\n                    <img src={item.photo}   />\r\n                </div>\r\n                <div className=\"card-content\">\r\n                <i className=\"material-icons\" style={{color:\"red\"}}>favorite</i>\r\n                {item.likes.includes(state._id)\r\n                ? \r\n                <i className=\"material-icons\"\r\n                     onClick={()=>{unlikePost(item._id)}}\r\n\r\n                     >thumb_down </i>\r\n                :  \r\n                <i className=\"material-icons\"\r\n                onClick={()=>{likePost(item._id)}}\r\n                >thumb_up </i>\r\n                \r\n                }\r\n                <h6>{item.likes.length} likes</h6>\r\n                <h6>{item.title}</h6>\r\n                <p>{item.body}</p>\r\n                {\r\n                                    item.comments.map(record=>{\r\n                                        return(\r\n                                        <h6 key={record._id}><span style={{fontWeight:\"500\"}}>{record.postedBy.name}</span> {record.text}</h6>\r\n                                        )\r\n                                    })\r\n                                }\r\n                \r\n                <form onSubmit={(e)=>{\r\n                        e.preventDefault()\r\n                        makeComment(e.target[0].value,item._id)\r\n                    }} >\r\n                     <input type=\"text\" placeholder=\"add comment\" />\r\n                </form>\r\n                    \r\n                </div>\r\n            </div>\r\n            \r\n                )\r\n            })\r\n        }\r\n                  </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Home","C:\\Users\\shatanshu agarwal\\Desktop\\Insta\\Server\\front\\src\\components\\screens\\CreatePost.js",["104"],"import React,{useState,useEffect} from  'react'\r\nimport {useHistory} from 'react-router-dom'\r\nimport M from 'materialize-css'\r\n\r\nconst CreatePost = ()=>{\r\n  const history = useHistory()\r\n  const [title,setTitle] = useState(\"\")\r\n  const [body,setBody] = useState(\"\")\r\n  const [image,setImage] = useState(\"\")\r\n  const [url,setUrl] = useState(\"\")\r\n  useEffect(()=>{\r\n    if(url){\r\n    fetch(\"/createPost\",{\r\n      method:\"post\",\r\n      headers:{\r\n          \"Content-Type\":\"application/json\",\r\n          \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n      },\r\n      body:JSON.stringify({\r\n          \r\n          title,\r\n          body,\r\n          pic:url\r\n      })\r\n  }).then(res=>res.json())\r\n  .then(data=>{\r\n      if(data.error){\r\n          M.toast({html: data.error,classes:\"#c62828 red darken-3\"})\r\n      }\r\n      else{\r\n          M.toast({html:\"Posted Successfully\",classes:\"#43a047 green darken-1\"})\r\n          history.push('/')\r\n      }\r\n  }).catch(err=>{\r\n      console.log(err)\r\n  })\r\n}\r\n\r\n  },[url])\r\n  const postDetails = ()=>{\r\n    const data = new FormData()\r\n    data.append(\"file\",image)\r\n    data.append(\"upload_preset\",\"insta112\")\r\n    data.append(\"cloud_name\",\"bazz001\")\r\n    fetch(\"https://api.cloudinary.com/v1_1/bazz001/image/upload\",{\r\n      method:\"post\",\r\n      body:data\r\n    }).then(res=>res.json())\r\n    .then(data=>{\r\n      setUrl(data.url)\r\n        })\r\n    .catch(err=>{\r\n      console.log(err)\r\n    })\r\n\r\n    \r\n    \r\n  }\r\n    return(\r\n        <div className=\"card input-filed\"\r\n        style={{\r\n            margin:\"30px auto\",\r\n            maxWidth:\"500px\",\r\n            padding:\"20px\",\r\n            textAlign:\"center\"\r\n        }}\r\n        >\r\n            <input \r\n            type=\"text\" \r\n            placeholder=\"title\"\r\n            value={title}\r\n            onChange={(e)=>setTitle(e.target.value)}\r\n            />\r\n            <input \r\n            type=\"text\" \r\n            placeholder=\"body\"\r\n            value={body}\r\n            onChange={(e)=>setBody(e.target.value)}  \r\n            />\r\n            <div className=\"file-field input-field\">\r\n      <div className=\"btn #64b5f6 blue darken-1\">\r\n        <span>Upload Image</span>\r\n        <input type=\"file\" onChange={(e)=>setImage(e.target.files[0])} />\r\n      </div>\r\n      <div className=\"file-path-wrapper\">\r\n        <input className=\"file-path validate\" type=\"text\"/>\r\n      </div>\r\n    </div>\r\n    <button className=\"btn waves-effect waves-light #64b5f6 blue darken-1\"\r\n    onClick={()=>postDetails()}\r\n    >\r\n                    Submit Post\r\n              </button>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\n\r\nexport default CreatePost","C:\\Users\\shatanshu agarwal\\Desktop\\Insta\\Server\\front\\src\\components\\screens\\Reset.js",["105","106","107","108"],"import React,{useState,useContext,} from 'react'\r\nimport {Link,useHistory} from 'react-router-dom'\r\nimport M from 'materialize-css'\r\nconst Reset  = ()=>{\r\n    const history = useHistory()\r\n    const [email,setEmail] = useState(\"\")\r\n    const PostData = ()=>{\r\n        if(!/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email)){\r\n            M.toast({html: \"invalid email\",classes:\"#c62828 red darken-3\"})\r\n            return\r\n        }\r\n        fetch('/reset-password',{\r\n            method:\"post\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\"\r\n            },\r\n            body:JSON.stringify({\r\n                email\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(data=>{\r\n           if(data.error){\r\n              M.toast({html: data.error,classes:\"#c62828 red darken-3\"})\r\n           }\r\n           else{\r\n               M.toast({html:data.message,classes:\"#43a047 green darken-1\"})\r\n               history.push('/signin')\r\n           }\r\n        }).catch(err=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n   return (\r\n      <div className=\"mycard\">\r\n          <div className=\"card auth-card input-field\">\r\n            <h2>Instagram</h2>\r\n            <input\r\n            type=\"text\"\r\n            placeholder=\"email\"\r\n            value={email}\r\n            onChange={(e)=>setEmail(e.target.value)}\r\n            />\r\n            <button className=\"btn waves-effect waves-light #64b5f6 blue darken-1\"\r\n            onClick={()=>PostData()}\r\n            >\r\n               reset password\r\n            </button>\r\n            \r\n    \r\n        </div>\r\n      </div>\r\n   )\r\n}\r\n\r\n\r\nexport default Reset","C:\\Users\\shatanshu agarwal\\Desktop\\Insta\\Server\\front\\src\\components\\screens\\Newpassword.js",["109","110"],"import React,{useState,useContext,} from 'react'\r\nimport {Link,useHistory,useParams} from 'react-router-dom'\r\nimport M from 'materialize-css'\r\nconst SignIn  = ()=>{\r\n    const history = useHistory()\r\n    const [password,setPasword] = useState(\"\")\r\n    const {token} = useParams()\r\n    console.log(token)\r\n    const PostData = ()=>{\r\n        fetch(\"/new-password\",{\r\n            method:\"post\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\"\r\n            },\r\n            body:JSON.stringify({\r\n                password,\r\n                token\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(data=>{\r\n            console.log(data)\r\n           if(data.error){\r\n              M.toast({html: data.error,classes:\"#c62828 red darken-3\"})\r\n           }\r\n           else{\r\n\r\n               M.toast({html:data.message,classes:\"#43a047 green darken-1\"})\r\n               history.push('/signin')\r\n           }\r\n        }).catch(err=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n   return (\r\n      <div className=\"mycard\">\r\n          <div className=\"card auth-card input-field\">\r\n            <h2>Instagram</h2>\r\n        \r\n            <input\r\n            type=\"password\"\r\n            placeholder=\"enter a new password\"\r\n            value={password}\r\n            onChange={(e)=>setPasword(e.target.value)}\r\n            />\r\n            <button className=\"btn waves-effect waves-light #64b5f6 blue darken-1\"\r\n            onClick={()=>PostData()}\r\n            >\r\n               Update password\r\n            </button>\r\n    \r\n        </div>\r\n      </div>\r\n   )\r\n}\r\n\r\n\r\nexport default SignIn\r\n",{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","severity":1,"message":"116","line":20,"column":10,"nodeType":"117","messageId":"118","endLine":20,"endColumn":15},{"ruleId":"119","severity":1,"message":"120","line":33,"column":5,"nodeType":"121","endLine":33,"endColumn":7,"suggestions":"122"},{"ruleId":"115","severity":1,"message":"116","line":9,"column":12,"nodeType":"117","messageId":"118","endLine":9,"endColumn":17},{"ruleId":"115","severity":1,"message":"123","line":14,"column":18,"nodeType":"117","messageId":"118","endLine":14,"endColumn":26},{"ruleId":"119","severity":1,"message":"124","line":21,"column":7,"nodeType":"121","endLine":21,"endColumn":12,"suggestions":"125"},{"ruleId":"126","severity":1,"message":"127","line":41,"column":23,"nodeType":"128","messageId":"129","endLine":41,"endColumn":24,"suggestions":"130"},{"ruleId":"126","severity":1,"message":"127","line":41,"column":48,"nodeType":"128","messageId":"129","endLine":41,"endColumn":49,"suggestions":"131"},{"ruleId":"119","severity":1,"message":"132","line":61,"column":7,"nodeType":"121","endLine":61,"endColumn":14,"suggestions":"133"},{"ruleId":"134","severity":1,"message":"135","line":80,"column":21,"nodeType":"136","endLine":83,"endColumn":23},{"ruleId":"115","severity":1,"message":"137","line":10,"column":12,"nodeType":"117","messageId":"118","endLine":10,"endColumn":17},{"ruleId":"115","severity":1,"message":"123","line":10,"column":18,"nodeType":"117","messageId":"118","endLine":10,"endColumn":26},{"ruleId":"115","severity":1,"message":"138","line":11,"column":16,"nodeType":"117","messageId":"118","endLine":11,"endColumn":22},{"ruleId":"126","severity":1,"message":"127","line":15,"column":23,"nodeType":"128","messageId":"129","endLine":15,"endColumn":24,"suggestions":"139"},{"ruleId":"126","severity":1,"message":"127","line":15,"column":48,"nodeType":"128","messageId":"129","endLine":15,"endColumn":49,"suggestions":"140"},{"ruleId":"119","severity":1,"message":"141","line":23,"column":7,"nodeType":"121","endLine":23,"endColumn":9,"suggestions":"142"},{"ruleId":"143","severity":1,"message":"144","line":70,"column":80,"nodeType":"145","messageId":"146","endLine":70,"endColumn":82},{"ruleId":"134","severity":1,"message":"135","line":97,"column":21,"nodeType":"136","endLine":99,"endColumn":23},{"ruleId":"115","severity":1,"message":"147","line":7,"column":18,"nodeType":"117","messageId":"118","endLine":7,"endColumn":26},{"ruleId":"143","severity":1,"message":"148","line":33,"column":28,"nodeType":"145","messageId":"146","endLine":33,"endColumn":30},{"ruleId":"143","severity":1,"message":"148","line":58,"column":28,"nodeType":"145","messageId":"146","endLine":58,"endColumn":30},{"ruleId":"143","severity":1,"message":"148","line":85,"column":26,"nodeType":"145","messageId":"146","endLine":85,"endColumn":28},{"ruleId":"143","severity":1,"message":"148","line":120,"column":179,"nodeType":"145","messageId":"146","endLine":120,"endColumn":181},{"ruleId":"134","severity":1,"message":"135","line":129,"column":21,"nodeType":"136","endLine":129,"endColumn":47},{"ruleId":"143","severity":1,"message":"148","line":8,"column":19,"nodeType":"145","messageId":"146","endLine":8,"endColumn":21},{"ruleId":"143","severity":1,"message":"148","line":11,"column":19,"nodeType":"145","messageId":"146","endLine":11,"endColumn":21},{"ruleId":"143","severity":1,"message":"148","line":18,"column":19,"nodeType":"145","messageId":"146","endLine":18,"endColumn":21},{"ruleId":"115","severity":1,"message":"147","line":7,"column":18,"nodeType":"117","messageId":"118","endLine":7,"endColumn":26},{"ruleId":"143","severity":1,"message":"148","line":34,"column":28,"nodeType":"145","messageId":"146","endLine":34,"endColumn":30},{"ruleId":"143","severity":1,"message":"148","line":59,"column":28,"nodeType":"145","messageId":"146","endLine":59,"endColumn":30},{"ruleId":"143","severity":1,"message":"148","line":86,"column":26,"nodeType":"145","messageId":"146","endLine":86,"endColumn":28},{"ruleId":"143","severity":1,"message":"148","line":122,"column":179,"nodeType":"145","messageId":"146","endLine":122,"endColumn":181},{"ruleId":"134","severity":1,"message":"135","line":131,"column":21,"nodeType":"136","endLine":131,"endColumn":47},{"ruleId":"119","severity":1,"message":"149","line":39,"column":5,"nodeType":"121","endLine":39,"endColumn":10,"suggestions":"150"},{"ruleId":"115","severity":1,"message":"151","line":1,"column":24,"nodeType":"117","messageId":"118","endLine":1,"endColumn":34},{"ruleId":"115","severity":1,"message":"152","line":2,"column":9,"nodeType":"117","messageId":"118","endLine":2,"endColumn":13},{"ruleId":"126","severity":1,"message":"127","line":8,"column":23,"nodeType":"128","messageId":"129","endLine":8,"endColumn":24,"suggestions":"153"},{"ruleId":"126","severity":1,"message":"127","line":8,"column":48,"nodeType":"128","messageId":"129","endLine":8,"endColumn":49,"suggestions":"154"},{"ruleId":"115","severity":1,"message":"151","line":1,"column":24,"nodeType":"117","messageId":"118","endLine":1,"endColumn":34},{"ruleId":"115","severity":1,"message":"152","line":2,"column":9,"nodeType":"117","messageId":"118","endLine":2,"endColumn":13},"no-native-reassign",["155"],"no-negated-in-lhs",["156"],"no-unused-vars","'state' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'history'. Either include them or remove the dependency array.","ArrayExpression",["157"],"'setImage' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'uploadFields'. Either include it or remove the dependency array.",["158"],"no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["159","160"],["161","162"],"React Hook useEffect has missing dependencies: 'dispatch' and 'state'. Either include them or remove the dependency array.",["163"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'image' is assigned a value but never used.","'setUrl' is assigned a value but never used.",["164","165"],["166","167"],"React Hook useEffect has a missing dependency: 'userid'. Either include it or remove the dependency array.",["168"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'dispatch' is assigned a value but never used.","Expected '===' and instead saw '=='.","React Hook useEffect has missing dependencies: 'body', 'history', and 'title'. Either include them or remove the dependency array.",["169"],"'useContext' is defined but never used.","'Link' is defined but never used.",["170","171"],["172","173"],"no-global-assign","no-unsafe-negation",{"desc":"174","fix":"175"},{"desc":"176","fix":"177"},{"messageId":"178","fix":"179","desc":"180"},{"messageId":"181","fix":"182","desc":"183"},{"messageId":"178","fix":"184","desc":"180"},{"messageId":"181","fix":"185","desc":"183"},{"desc":"186","fix":"187"},{"messageId":"178","fix":"188","desc":"180"},{"messageId":"181","fix":"189","desc":"183"},{"messageId":"178","fix":"190","desc":"180"},{"messageId":"181","fix":"191","desc":"183"},{"desc":"192","fix":"193"},{"desc":"194","fix":"195"},{"messageId":"178","fix":"196","desc":"180"},{"messageId":"181","fix":"197","desc":"183"},{"messageId":"178","fix":"198","desc":"180"},{"messageId":"181","fix":"199","desc":"183"},"Update the dependencies array to be: [dispatch, history]",{"range":"200","text":"201"},"Update the dependencies array to be: [uploadFields, url]",{"range":"202","text":"203"},"removeEscape",{"range":"204","text":"205"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"206","text":"207"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"208","text":"205"},{"range":"209","text":"207"},"Update the dependencies array to be: [dispatch, image, state]",{"range":"210","text":"211"},{"range":"212","text":"205"},{"range":"213","text":"207"},{"range":"214","text":"205"},{"range":"215","text":"207"},"Update the dependencies array to be: [userid]",{"range":"216","text":"217"},"Update the dependencies array to be: [body, history, title, url]",{"range":"218","text":"219"},{"range":"220","text":"205"},{"range":"221","text":"207"},{"range":"222","text":"205"},{"range":"223","text":"207"},[1159,1161],"[dispatch, history]",[570,575],"[uploadFields, url]",[1069,1070],"",[1069,1069],"\\",[1094,1095],[1094,1094],[1741,1748],"[dispatch, image, state]",[456,457],[456,456],[481,482],[481,481],[735,737],"[userid]",[1008,1013],"[body, history, title, url]",[282,283],[282,282],[307,308],[307,307]]